#!/bin/bash

GREEN=$(tput setaf 2)
RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)
RESET=$(tput sgr0)

SERVER_LIST="/opt/server_list.txt"

main_menu() {
  while true; do
    echo "===== ANA MENÜ ====="
    echo "1) Bu sunucuda işlem yap"
    echo "2) Diğer sunucularda işlem yap"
    echo "3) Çıkış"
    read -rp "Seçiminiz: " main_choice

    case $main_choice in
      1) network_operations "local" ;;
      2)
        if [[ ! -f "$SERVER_LIST" ]]; then
          echo "Sunucu listesi dosyası bulunamadı: $SERVER_LIST"
          continue
        fi
        mapfile -t servers < "$SERVER_LIST"
        PS3="Sunucu seçin: "
        select server in "${servers[@]}" "Geri Dön"; do
          if [[ $REPLY -gt 0 && $REPLY -le ${#servers[@]} ]]; then
            echo "[$server] sunucusuna ping atılıyor..."
            if ping -c 2 -W 2 "$server" &>/dev/null; then
              echo -e "${GREEN}Ping başarılı. SSH bağlantısı deneniyor...${RESET}"
              if ssh -o BatchMode=yes -o ConnectTimeout=5 "$server" "echo bağlantı başarılı" &>/dev/null; then
                echo -e "${GREEN}SSH anahtarlı bağlantı başarılı.${RESET}"
                network_operations "$server"
              else
                echo -e "${YELLOW}SSH anahtarı kurulu değil.${RESET}"
                read -rp "Anahtar kurulumu yapılsın mı? (e/h): " key_choice
                if [[ "$key_choice" =~ ^[eE]$ ]]; then
                  setup_ssh_key "$server"
                  echo -e "${YELLOW}Bağlantı tekrar deneniyor...${RESET}"
                  if ssh -o BatchMode=yes -o ConnectTimeout=5 "$server" "echo bağlantı başarılı" &>/dev/null; then
                    echo -e "${GREEN}SSH bağlantısı başarılı.${RESET}"
                    network_operations "$server"
                  else
                    echo -e "${RED}Anahtar kurulumu başarısız. Şifreyle bağlantı deneniyor...${RESET}"
                    network_operations "$server"
                  fi
                else
                  echo -e "${YELLOW}Anahtar kurulumu iptal edildi. Şifreyle bağlantı deneniyor...${RESET}"
                  network_operations "$server"
                fi
              fi
            else
              echo -e "${RED}Ping başarısız! Sunucuya erişilemiyor.${RESET}"
            fi
            break
          elif [[ $REPLY -eq $((${#servers[@]}+1)) ]]; then
            break
          else
            echo "Geçersiz seçim."
          fi
        done
        ;;
      3) echo "Çıkılıyor..."; exit ;;
      *) echo "Geçersiz seçim." ;;
    esac
  done
}

setup_ssh_key() {
  local target=$1
  local keyfile="$HOME/.ssh/id_rsa"

  if [[ ! -f "$keyfile" ]]; then
    echo "SSH anahtarınız bulunamadı. Yeni anahtar oluşturuluyor..."
    ssh-keygen -t rsa -b 2048 -N "" -f "$keyfile"
  fi

  echo "Anahtar $target sunucusuna gönderiliyor (ilk seferde şifre sorabilir)..."
  ssh-copy-id -o ConnectTimeout=5 "$target"
}

network_operations() {
  local target=$1
  while true; do
    echo "=== Ağ İşlemleri (${target}) ==="
    echo "1) Network bacak durumu kontrol et"
    echo "2) Konuşulan IP ve Port bilgileri"
    echo "3) Spesifik IP/Port kontrolü"
    echo "4) Geri Dön"
    read -rp "Seçiminiz: " choice

    case $choice in
      1) check_interfaces "$target" ;;
      2) show_connections "$target" ;;
      3) specific_check "$target" ;;
      4) break ;;
      *) echo "Geçersiz seçim." ;;
    esac
  done
}

remote_exec() {
  local target=$1
  local cmd=$2
  if [[ "$target" == "local" ]]; then
    eval "$cmd"
  else
    ssh -o ConnectTimeout=5 "$target" "$cmd"
  fi
}

check_interfaces() {
  local target=$1
  remote_exec "$target" '
    for iface in $(ls /sys/class/net); do
      ip_addr=$(ip addr show "$iface" | grep "inet " | awk "{print \$2}")
      state=$(cat /sys/class/net/"$iface"/operstate)
      type=$(basename "$(readlink /sys/class/net/"$iface"/device 2>/dev/null || echo unknown)")
if [[ "$state" == "up" && -n "$ip_addr" ]]; then
        echo -e "'$GREEN'[$iface][$type][$state][$ip_addr]'$RESET'"
      else
        echo -e "'$RED'[$iface][$type][$state][IP Yok]'$RESET'"
      fi
    done
  '
}

show_connections() {
  local target=$1
  remote_exec "$target" '
    echo "--- Bağlantı Bilgileri (ss) ---"
    ss -tunp | awk "NR>1 {print \$5, \$6}" | sort | uniq
  '
}

specific_check() {
  local target=$1
  read -rp "IP adresi (opsiyonel): " ip
  read -rp "Port numarası (opsiyonel): " port

  if [[ -z "$ip" && -z "$port" ]]; then
    echo "En az IP veya port girilmelidir."
    return
  fi

  remote_exec "$target" "
    echo '--- Eşleşen Bağlantılar ---'
    ss -tunp | grep '${ip:-.*}' | grep -E ':${port:-[0-9]+}' || echo 'Eşleşme bulunamadı.'
  "
}

main_menu
